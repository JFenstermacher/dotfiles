# Function to source files if they exist
function zsh_add_file() {
  [ -f $ZDOTDIR/$1 ] && source $ZDOTDIR/$1
}

function zsh_load_directory() {
  if [ -d $1 ]; then
    for filename in $1/*; do
      if [ -f $filename ]; then
        source $filename > /dev/null 2>&1
      fi
    done
  fi
}

function zsh_add_plugin() {
  local plugin_name=$(echo $1 | cut -d "/" -f 2)
  local plugin_dir="plugins/$plugin_name"

  if [ ! -d $ZDOTDIR/$plugin_dir ]; then
    git clone "https://github.com/$1.git" --depth=1 $ZDOTDIR/$plugin_dir
  fi

  zsh_add_file $plugin_dir/$plugin_name.plugin.zsh || zsh_add_file $plugin_dir/$plugin_name.zsh
}

function zsh_load_theme() {
  THEME_NAME=$(echo $1 | cut -d "/" -f 2)
  
  if [ ! -d $ZDOTDIR/themes/$THEME_NAME ]; then
    git clone "https://github.com/$1.git" --depth=1 $ZDOTDIR/themes/$THEME_NAME
  fi

  source $ZDOTDIR/themes/$THEME_NAME/$THEME_NAME.zsh-theme
}

function zsh_add_plugins() {
  local plugins=($@)
  
  for plugin in "${plugins[@]}"; do
    zsh_add_plugin $plugin
  done
}

function zsh_refresh_plugins() {
  for f in $ZDOTDIR/plugins/*; do
    echo "[INFO] Refreshing: $( basename $f )"
    $( cd $f && git pull -q )
  done
}

function zvm_config() {
  ZVM_LINE_INIT_MODE=$ZVM_MODE_INSERT
  ZVM_VI_INSERT_ESCAPE_BINDKEY=jk
}

function awslp() {
  perl -n -e'/\[profile (.*)\]/ && print "$1\n"' ~/.aws/config
}

function terraform() {
  function load_env_file() {
    local envfile=".env"
    if [[ "$1" =~ -chdir= ]]; then
      envfile="${1#-chdir=}/${envfile}"
    fi

    if [ -f $envfile ]; then
      set -a
      source $envfile
      set +a
    fi
  }

  load_env_file $1

  command terraform $@
}

function installed() {
  command -v $1 > /dev/null && return 0 || return 1
}

function asdf_setup() {
  local setup_file=
  case $OSTYPE in
    darwin*)
      setup_file=/opt/homebrew/opt/asdf/libexec/asdf.sh
      ;;
    *)
      setup_file=/opt/asdf-vm/asdf.sh
      ;;
  esac

  [ -f "$setup_file" ] && source "$setup_file"
}

function pdm_setup() {
  installed "pdm" || return

  local pdm_comp=$ZDOTDIR/.zfunc/_pdm
  [ -f $pdm_comp ] || pdm completion zsh > $pdm_comp
}

function load_aws_completions() {
  installed "aws_completer" || return

  case $OSTYPE in
    darwin*)
      complete -C "/opt/homebrew/bin/aws_completer" aws
      ;;
    *)
      complete -C "/usr/local/bin/aws_completer" aws
      ;;
  esac
}
